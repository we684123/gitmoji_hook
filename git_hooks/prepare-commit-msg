#!/bin/sh

commit_msg_file="$1"
commit_source="$2"

echo "commit_msg_file: $commit_msg_file"
echo "commit_source: $commit_source"
echo "\$3: $3"
echo

if [ "$commit_source" = "merge" ]; then
    target_branch=$(git rev-parse --abbrev-ref HEAD)
    parent_commits=$(git show -s --pretty=%P HEAD)

    echo "target_branch: $target_branch"
    echo "parent_commits: $parent_commits"
    
    source_commits=$(echo $parent_commits | awk '{print $2}')
    echo "source_commits: $source_commits"

    # Get all branches with their last commit
    while IFS=' ' read -r commit_hash branch_name; do
        if [ "$commit_hash" = "$source_commits" ]; then
            parent_branch=$(echo "$branch_name" | sed 's|refs/heads/||')
            break
        fi
    done <<< $(git show-ref --heads)

    echo "parent_branch: $parent_branch"

    if [ -n "$parent_branch" ]; then
        echo "ðŸ”€ Merge branch '$parent_branch' into $target_branch" > "$commit_msg_file"
    else
        echo "source_commits is empty, skip commit message modification"
    fi
fi
